{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "MMCP Calculus Notation Schema",
  "description": "Schema for Mathematical and Computational Calculus Processing",
  "type": "object",
  "required": ["type", "id", "version", "expressions"],
  "additionalProperties": false,
  "properties": {
    "type": {
      "type": "string",
      "enum": ["Calculus", "LambdaCalculus", "QuantumCalculus", "CategoryCalculus"],
      "description": "Specifies the type of calculus notation"
    },
    "id": {
      "type": "string",
      "pattern": "^[A-Z]+-[A-Z]+-[0-9]{3}$",
      "description": "Unique identifier following PFSUS format"
    },
    "version": {
      "type": "string",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)$",
      "description": "Semantic versioning format"
    },
    "last_modified": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp"
    },
    "author": {
      "type": "string",
      "minLength": 1,
      "maxLength": 100
    },
    "expressions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/expression"
      },
      "minItems": 1
    },
    "compositionRules": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/compositionRule"
      }
    }
  },
  "definitions": {
    "expression": {
      "type": "object",
      "required": ["id", "expression"],
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z][A-Za-z0-9_]*$"
        },
        "expression": {
          "type": "string",
          "minLength": 1
        },
        "description": {
          "type": "string"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[A-Za-z][A-Za-z0-9_]*$"
          },
          "uniqueItems": true
        },
        "nested": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/expression"
          }
        }
      }
    },
    "compositionRule": {
      "type": "object",
      "required": ["rule", "description"],
      "additionalProperties": false,
      "properties": {
        "rule": {
          "type": "string",
          "minLength": 1
        },
        "description": {
          "type": "string",
          "minLength": 1
        },
        "examples": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true
        }
      }
    }
  }
}
