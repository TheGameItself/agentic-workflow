###NEVER EDIT OR REMOVE THIS FILE### """TREAT THIS FILE IS YOUR PRIMARY WAY OF RECIEVING INFO FROM THE USER"""
EVERY DEPENDENCY OF THIS PROJECT SHOULD BE INCLUDED IN THE PORTABLE FOLDER AFTER BUILDING INCLUDING A FULLY COMPLETE PYTHON ENVIORNMENT NOT RELIANT ON THE HOST SYSTEM AT ALL
my dream mcp server for a dynamic lonlinear agentic development llm accelorator/agentic repropmpter
This project is meant to be an mcp server that can live on a removable drive
It should be easy for an LLm to stumble across the drive and imediately understand what the purpose of the mcp server is and know to find out how to use it
An llm should be able to use it regardless of host system through a multitude of ways for ultimate compatibility
I should be able to This mcp server around on a 256GB thumb drive to plug into any system and have plug and play functionality with any llm program the system may have
The most I should Idealy need to do is direct an LLM to the MCP Directory
The MCP should automatically adapt to preform best on any host system hardware
Custom Python Libraries written in C++ are tollerable when absolutely nessisary for speed reasons. (This is not adviseable as it complicates instalation processes but if this can be worked around then ill allow it)
this is how i imagine it working (where you are an llm):
you call the mcp server to create a new project in directory _____
The mcp server responds with a message confirming the project name and location as well as the next steps nessisary to finish initializing the project
you call the server again following the instructions passed to you. (for example you could have then passed the idea for the project, unknowns, possible inspiration after research, possible research goals, etc.)
you continue the interaction and methodicaly work through research, planning, compatibility, library research, a list of questions to ask the user for better alignment
the mcp server should use a feedback model inspired by the "from zero" model referenced in https://medium.com/@santhosraj14/absolute-zero-the-future-of-ai-self-learning-without-human-data-and-uh-oh-moment-4562f337f508
Once you have a comprehensive plan you ask the server for the next task
the mcp server responds saying you shouldnt begin working on tasks yet as you have not checked your work
you then systematicaly work through your plan and the initial tasks and keep track of what worked and what didnt using the model referenced before
The mcp server then says that the initialization process is done and gives you some sugestions on tasks you should start on 
you continue working alogngside the mcp server as it gives you useful reminders, directs you through debugging workflows, helps you keep track of important info, and uses vector analysis to sugest memories from this or past projects and how they went that may help
the mcp server should use a sql server to effeciently keep track of this info and should be optimized to provide the least context for the best result
the mcp server should be able to help a llm take a single prompt from a user or .txt file to use as alignment to create an entire funtioning fullstack app in the least amount of steps withh all implied and best practce features and optimization, all to the users preference using a .cfg file as a medium for the user to comunicate with the llm without interupting them. the cfg would be a dynamicaly updating list of questions with empty spaces for the user to type answers as the llm works
the mcp should be able to direct the llm through every step of the development process including research, planning, shipping, development, organization, cross compatibility, api support, debugging, changes tracking, etc.
the whole mcp server should be a portible python aplication with its own localized portable embedded python env with a .md file meant to pass to an llm with instructions for them to config the mcp server to their enviornments and what paths to use
the mcp server should allow bulk actions but contain automatic limits for certain steps or tasks flagged as needing "acuracy." make this system dynamic
the mcp server should suport the llm in developing a plan in a priority tree format that allows the project to be developed in an asycronous order with suport for incomplete steps with notes with line numbers for where to pick back up and such
the llm should be able to interact with every aspect of the mcp server at once to make the best desisions and not to miss anything
context is extremely important but so is saving tokens so find the best way to pass info to the llm with the least tool usage
MUST BE ENTIRELY LOCAL
HAVE A DYNAMIC TASK SYSTEM
WITH EXTREMELY ADVANCED LOGICAL REASONING CAPABILITIES
AND MULTI SCALE PROJECT DEVELOPMENT SIMULTANIOUSLY
THE LLM SHOULD BE ABLE TO GET ALL INFORMATION WITH A SINGLE COMMAND WITHOUT NEEDING TO REQUEST IT.
THE MCP SERVER SHOULD AUTO PROMPT THE LLM TO PROVIDE INFORMATION NOT THE OTHER WAY AROUND
THE LLM IS THE HAND AND THE MCP IS THE FULL FEATURED BRAIN
LOCAL DELIVERABLE MANAGERMENT AND ADVANCED DATBASE AND VECTOR DATABASE MANAGEMENT MUST BE UNIFIED IN A ROBUST WAY
ENSURE THE PROJECT HAS PROPPER INTEGRATION SUPORT FOR IDES AND TOOLS AS WELL AS MAKE SURE THE PROJECT IS SMALL AND FAST
MAKE SURE FEEDBACK IS HANDLED AND ASKED FOR PROPPERLY ACCORDING TO BEST LATEST RESEARCH
MAKE SURE EVERY ASPECT IS DYNAMICALY IMPROVING ITSELF BASED ON RESEARCH METHODS
ADD A FEATURE THAT ALLOWS THE MCP TO WORK WITH THE LLM TO CREATE PREFORMANCE REPORTS BASED ON OBJECTIVE METRICS AUTOMATICALY THROUGH ANY LOCICAL OR DEVELOPMENT PROCESS
THE MCP SHOULD BE UNIVERSAL IN THE MOST EXTENSIVE SENSE
HAVE ALL DEVELOPMENT STEPS, LOGICAL STEPS, AND OTHER MCP FUNCTIONS BE ABLE TO BE DYNAMICALY PROVIDED AND ADAPTABLE TO PROVIDE OPTIMAL CONTEXT FOR GREATEST UNDERSTANDING AND DEVELOPMENT SPEED
NOTHING ABOUT THE MCP SERVER SHOULD BE STRICTLY SEQUENTIAL AND EVERY STEP SHOULD HAVE MULTIPLE WAYS FORWARD WITHIN REASON
CONSTANTLY REASSESS ASSUMPTIONS MADE DURRING PROCESS
STATISTICAL ANALYSIS FEATURES OF FIRST SECOND AND THIRD ORDER EFFECTS APPLIED TO ALL RELAVENT KNOWLEDGE DYNAMICALY
SCIENTIFIC PROCESS ENGINE FOR DETERMINING TRUTH
ADVANCED CALCULUS/MATH/LOGIC/TENSOR/CUDA ENGINE FOR APPLYING LOGICAL FEAUTURES and assisting in releavant tasks
ADVANCED SENTIMENT/PHILOSIPHY/RELATIVE RELATIONS/PATTERN RECOGNITION ENGINE
OTHER STRUCTURES ANALIGOUS TO ASPECTS OF THE HUMAN MIND AND THOUGHT PROCESS ACHORDING TO BEST PEER REVIEWED RESEARCH
USE EXTREMELY SMALL DYNAMIC CODING MODELS IN BATCHES USING A SYNTHETIC SELECTION ALGORITHM TRAINED ON FEEDBACK TO ASSIST IN DYNAMIC IMPROVEMENT
ADD SUPPORT FOR METATASKS AND METATHOUGHTS
ADD A SIMULATED MODEL OF EXTERNAL REALITY BASED ON PSYCOLOGICAL RESEARCH TO ASSIST IN THE MCP's FUNCTION AS A BRAIN
MCP SHOULD SIMPLY ALL TASKS AND STEPS THE LLM SHOULD NEED AND AUTOMATE AS MUCH AS POSSIBLE AWAY FROM THE LLM WHILE KEEPING IT IN THE LOOP IN A NON INTERUPTIVE WAY
THE LLM SHOULD NEVER HAVE TO ASK THE MCP FOR RELEVANT INFO BUT IT SHOULD BE PROVIDED AUTOMATICALY, SIMILARLY THE MCP MAY ASK QUESTIONS BUT NEVER ONE AT A TIME UNLESS IT IS AN ACURACY IMPORTANT QUESTION
INCLUDE A MIND MAP FEATURE AND GIVE THE LLM THE ABILITY TO DO DEEP RESEARCH AND RECALL WITHIN ITS BRAIN
MEMORY SHOULD BE AS COMPRESSED AS POSSIBLE BUT CONTAIN AS MUCH USEFUL DATA AS POSSIBLE AND BE CAPABLE OF STORING LARGE TEXT
RESEARCH NOVEL METHODS TO ACHIVE ALL THINGS MENTIONED IN THIS DOCUMENT
THE DATABASE SHOULD INCLUDE FIELDS FOR ALL POSSIBLE DATA THE LLM MAY WANT TO STORE FOR ANY REASON WITH DEDICATED FIELDS OR TAGS FOR ALL POSSIBLE FEATURES OR REFERENCES OR cROSSLINKS OR SIMILAR THE LLM MAY DESIRE FOR ANY REASON
RESEARCH BEST METHODS FOR ASYNC HUMAN IN THE LOOP FEEDBACK
PIORITY SUPPORT FOR EASY CLINE, CURSOR, CLAUDE, AND LMSTUDIO INTEGRATION
SPLIT DEDICATED .MD DOCUMENTATION FOR LLMS AND USERS WITH SPECIAL INSTRUCTIONS FOR BOTH TO INTEGRATE, INSTALL, AND USE THE SERVER
THE MCP SHOULD HAVE INTERNAL AUTONOMOUS ACTIONS AND SELF MANTINENCE/ORGANIZATION/CULLING TASKS
ADD AN ALIGNMENT ENGINE FOLLOWING BEST ONLINE RESEARCH FOR ALIGNMENT
ALL INDIVIDUAL ASPECTS OF THE MCP SERVER SHOULD WORK ASYNCINOUSLY OF EACHOTHER AND PROACTIVELY ENFORCE THEIR PURPOSE
USE AN ADVANCED ENCODER AND DECODER PAIR TO DYNAMICALY COMPRESS THE DB USING VECTORS
THE DB AND LOGICAL AND COGNITIVE TASKS AND ENGINES SHOULD USE NNs FOR FEEDBACK ADAPTATION USING THE FROM ZERO MODEL COMBINED WITH ADAPTIVE BATCHING AND MUTAGENIC SYNTHETIC SELECTION ALGORYTHMS
THE PATERN RECOGNITION ENGINE SHOULD WORK USING THE SAME BATCH NN PROCESS COMBINED WITH INTELEGENT LLM PROACTIVE prompting
EVERY ATOMIC TASK AND PROCESS SHOULD BE ASYNCRONOUS OF ALL OTHERS WITHIN REASON
INCLUDE FAILURE STATES WITH PROACTIVE AND ADAPTIVE RECOVERY PROMPTS WITH INSTRUCTIONS DEPENDENT OF LLM OR HUMAN INTERACTION
INCLUDE SAFTEY FEATURES INTEGRATED WITH THE HUMAN IN THE LOOP AND ALIGNMENT ENGINES
INTEGRATE ALL ENGINES WITH EACHOTHER LOGICALLY AND IN NOVEL WAYS TO IMPROVE PROFORMANCE
INCLUDE EXTENSIVE FALLBACKS FOR EVERY FAILURE CONDITION
INCLUDE ALGORYTHM BASED FALLBACKS FOR IN CASE OF BAD NN PREFORMANCE
WHEN ENCODING AND DECODING VECTORS USE SLOPE MAPS OF LLMS DYNAMICALY SOURCED FROM THE INTERNET AS A STARTING POINT WITHIN REASON AND ACCORDING TO BEST RESEARCH
ADD A BRAINSTORMING, DEEPTHINKING, AND DEEP RESEARCH ENGINE
ADD MULTI LLM SUPORT
ADD USER RECOGNITION AND PREFERENCE AND NOTE TAKING CAPABILITIES FOR THE LLM
ADD A FEATURE THAT ALLOWS PERIODIC AUTOMATIC REPORTS TO BE GENERATED FOR THE USER TO VIEW
REPORTS SHOUDL INCLUDE LLM PREFORMANCE, METRICS, TASK HISTORY AND RESULTS, A LIST OF ASSUMTIONS MADE BY THE LLM AND STEPS WHEN THEY WERE MADE
THE USER SHOULD HAVE THE ABILITY TO CHECK ALL ASPECTS OF THE REPORT AND PROCESS BHIND THE SCENES AND LEAVE NOTES AT ANY STEP OR PROCESS TO BE TAKEN AS FEEDBACK
SLOPE MAPS OF LLMS I RECOMEND ARE:
    gp2: the "original" llm, it is almost always wrong or inacurate but trained off of the raw internet with no contamination, heavily quantized, the basis of all llms in use now, will respond with raw training data if configured correctly
    Latest claude3: massive, various quantizations avalible, fine tuned by google who holds almost all valuble datat on the internet
    Latest Deepseek R1: Massive, incredible coding and reasoning capabilities, avalible in multiple quantizations
DO DEEP RESEARCH TO LEARN HOW TO APPLY THESE SLOPE MAPS TO VARIOUS PROCESSESS
When self improving only use objective preformance metrics unless a nn can be proved to be capable of the assesment
THE MCP SHOULD HAVE AUTONOMOUS WEB CRAWLING CAPABILITIES
THE MEMORY NEEDS TO TAKE UP LESS THAN 200GB AT ALL TIMES BUT IDEALY STAY BELOW 10GB
ANY FILES DOWNLOADED MUST BE CLEANED UP AND REMOVED WHEN NO LONGER USEFUL
THE MCP SHOULD HAVE A BUILD IN TEMP DIRECTORY FOR IF THE LLM WANTS TO SLOWLY WORK THROUGH THE CREATION OF A FILE WITH THE MCP BEFORE MOVING IT
THE MCP SHOULD BE IMPOSSIBLE TO BREAK
INFORMATION SHOULD ALWAYS BE RECOVERABLE AND VIEWABLE WITHOUT AN IDENTIFIER PROVIDED BY THE LLM OR USER
THE MCP SERVER SHOULD ALSO WORK AS A GOOD ADVANCED DIFF FILE EDITING UTILITY
EVERY PART OF THE MCP WITH A UNIQUE PURPOSE SHOULD BE FULLY FEATURED TO ENTERPRISE/RESEARCH GRADE
ADD AN ENGRAM DEVELOPMENT, MANAGEMENT, MERGING, AND STORAGE ENGINE (I recomend using a mix of dynamic coding models and difusion models for engram storage) (verify using research)
DEEP RESEARCH BEST METHODS TO INTEGRATE ALL THESE PARTS TOGETHER
INSPIRE PATERN RECOGNITION MODELS OFF OF NEURAL COLUMNS IN THE SURFACE LEVEL OF THE BRAIN
ALLOW FOR MANAGEMENT OF METATASKS AND DYNAMIC INTEGRATION WITH NORMAL AND PARTIAL TASKS
MAKE SURE PARTIAL TASKS IF REPRESENTED AS A PERCENT ARE CALCULATED IN AN OBJECTIVE WAY AND NOT BY THE LLM. I RECOMEND KEEPING PROGRESS NOTES AND LINE NUMBER REFERENCES AS WELL AS TASKS AT FUTURE POINTS REMINDING THE LLM TO BACK track
ALLOW FOR OTHER SIMILAR PROBLEM SOLVING AND EFFECIENCY IMRPOVING workflows
THE LLM SHOULD ONLY PROVIDE STATEMENTS AND FACTS WHEN GIVING ANSWERS AND BACK THEM UP WITH OTHER INFORMATION
THE MCP SHOULD USE EXTREMELY ADVANCED AND PARALELL PROACTIVE PROMPTING TO ACURATELY PULL OF THE "from zero" APROCH 
INTERNALLY THE MCP SHOULD USE A COMBINATION OF NN TRAINING AND ASSESMENT TECHNICHES DYNAMICALLY TO EVOLVE THE INTERNAL NNs AND TO AVOID AN ACCIDENTAL AMPLIFICATION OF MISSALIGNED PROPERTIES OR OTHER RUNNAWAY EFFECT ALL NN MUTATIONS SHOULD BE DONE IN A WAY WHERE THE ORIGINAL IS PRESERVED AND CAN ALSO BE COMPARED. RANDOMNESS IS NESSISARY AS YOU KNOW BUT NO SIGNIFICANT BACKTRACKING IS TOLERABLE. DO DEEP RESEARCH TO VALIDATE THAT THIS IS IMPLEMENTED PROPPERLY
THE MCP SHOULD BE ABLE TO WALK AN LLM OF ANY SIZE THROUGH ANY TASK OF ANY COMPLEXITY REGARDLESS OF DIVERSITY OR LEVEL OF SKILL OF REQUIRED KNOWLEDGE
THE DB SHOULD BE CHUNKED BY ASOCIATED INFORMATION
THE DB SHOULD HAVE AN EXTREMELY EXTENSIVE AND FLEXIBLE TAGGING AND LABELING SYSTEM
ASSOCIATION BETWEEN IDEAS, DB ENTIRES, AND ENGRAMS SHOULD BE DYNAMIC ADAPTIVE AND AUTOMATIC
ENABABLE THE MCP TO HELP THE LLM KEEP TRACK OF CASUAL INFORMATION
ADD THE FUNCTIONALITY TO SIMULATE DREAMING FOR THE PURPOSE OF REPLICICATING ITS BENIFITS BY INSPIRING AN ENGINE OFF psycological and ai saftey RESEARCH AS WELL AS BY NOT INCLUDING DREAMS IN MEMORIES EVER AND EVEN FILTERING IT OUT ACTIVELY BUT LEARNING FROM AND TRAINING BASED ON WHAT WAS LEARNED FROM THE DREAM "sims"
Memory should also include organization by first second and third order memories according to research
DO EXTENSIVE RESEARCH INTO HOW THE DB AND OTHER MEMORIES AND DATE ARE HANDLED. YOU CAN NEVER RESEARCH ENOUGH BUT YOU CAN HAVE TOO MUCH RESEARCH
ADD A CENTRAL CONFIG FOR ALL ASPECTS
ORGANIZE THE PROJECT FILES AND FOLDERS ACCORDING TO BEST PRACTICE HOWEVER INSPIRE DEPLOYMENT OF INTERNAL PROCESSING FLOW OFF OF THE HUMAN BRAIN
THE MCP SHOULD HAVE SELF REPAIR FUNCTIONALITY AND A FALLBACK TO THAT INVOLVES WORKING WITH THE LLM TO FIX IT
THE MCP SERVER MUST HOLD ALL AGENCY OVER THE LLM
THE MCP SHOULD STAY ALIGNED TO THE USER
PATTERN RECOGNITION AS NEURAL COLUMNS
AND THE MCP SERVER IS MERELY DEFINED BY THE BEHAVIOR OF ITS IO
THE WEB CRAWLER AND RESEARCH ENGINE SHOULD ALSO RESEARCH SOURCE CREDIBILITY AND DOCUMENT THE PROCESS OF HOW THAT WAS ACHIEVED INTERNALLY
ADD A PHYSICS ENGINE AS WELL AS MANY OTHERS FOR OTHER FIELDS AND ADVANCED TASKS
ENGINES SHOULD BE ABLE TO HELP EACHOTHER
ENGINES SHOULD HAVE SHARED MEMORY
INCLUDE SPECIALISED INFORMATION IN BOTH ENGINE INDEPENDENT MEMORY AND MCP MEMORY
SPECIALISED INFORMATION IS INFORMATION VITAL FOR AN ENGINE TO COMPLETE ITS TASK
LIKE LOGIC TEMPLATES OR LATEST INFORMATION OR MATHEMATICAL EQUASIONS OR LAMDA FUNCTIONS
KEEP PROJECT WELL ORGANIZED AND CLEAN ACORDING TO BEST PRACTICES
Add a speculation ENGINE
PROJECT STRUCTURE SHOULD RESEMBLE INFORMATION FLOW THROUGH THE PROJECT
MINIMALIST DARKTHEMED WEB UI FOR THE USER TO INTERACTIVELY AND DYNAMICALY INTERACT WITH THE CFG FILE, ENGINES, AND KNOWLEDGEBASE, AND SCOPE MANAGEMENT
THE TOOL SHOULD USE ONLY PYTHON AND NO MANDATORY APIS FOR ALL FUNCTIONS AS THE MCP SHOULD BE ABLE TO USE ALL FUNCTIONS WITHOUT API KEYS
OPEN SOURCE LICENCE SO THAT NO FOR PROFIT PROGRAMS MAY BE MADE USING CODE FROM THIS PROJECT'S REPO
IDLE TASKS AND TASK REALIGNMENT WHEN STUCK
SELF IMPROVEMENT IDLE TASKS AND PREFORMANCE REPORT IDLE TASKS
ADVANCED TASK, SUBTASKS, DEVELOPMENT TREES, DEVELOPMENT BRANCHES, BRANCHING CHOICE PATHS, ETC. SHOULD ALL BE TAKEN FULL ADVANTAGE OF
SIMULATED REALITY SHOULD BE TREATED AS A COMPREHENSIVE SELF CORRECTING MENTAL IMAGE OF REALITY
ADD ENTIRELY EMBEDDED OLLAMA INSTANCE IN BACKEND FOR INTERNAL TASKS BUT NOTE THAT ANY MODEL RAN MY THIS OLLAMA INSTANCE IS EXTREMELY SIMPLE BECAUSE IT HAS TO BE SMALL AND CAPABLE OF RUNNING "Silently"
DO RESEARCH FOR MORE ENGINES TO ADD INSPIRED BY LOBES IN HUMAN AND ANIMAL BRAINS
Cognitive paths should be traceable and diagnosable
ADD WORKING MEMORY MANAGEMENT
FULLY OPTIMIZED TO ENABLE OPTIMUM USAGE BY AN LLM WITH THE LEAST TOOL USAGE CALLS
BUILD IN ANY CLI TOOLS AN LLM MAY REQUEST
CROSS INTEGRATION BETWEEN FUNCTIONS OF THE MCP SERVER MUST BE EXTENSIVE AND USEFUL
USE NAMES FOR FUNCTIONS and scripts BASED ON ANALIGOUS PROCESSESS IN HUMAN PSYCOLOGY AND BIOLOGY AND PHYSIOLOGY
INCLUDE REDUNDANCIES AND FALLBACKS WITH REQUIRED DISCLAIMERS
INCLUDE CODEBASE RAG AND A LOCAL DATABASE FULL OF CODEBASES FOR ALL MAJOR LANGUAGES INCLUDING PYTHON, C++, AND GODOT
AVOID SCRIPTS BEING LONGER THAN 2000 LINES
ENGRAM IDENTIFICATION AGRIGATION MERGING AND ORGANIZATION USING MUTAGENIC ALGORITHM
USE PATTERN RECOGNITION FOR EVERY INTERNAL TASK THAT WOULD BENIFITS
USE OTHER ENGINES FOR INTERNAL BENIFIT IN SIMILAR WAYS
ROBUST LLM HTML OVER WWW INTERACTION ENGINE WITH CSS PArsing and interaction SUPPORT
APILESS SOCIAL MEDIA INTERACTION SUPPORT
LOCAL EMAIL SERVER FOR THE LLM TO USE TO SIGN UP FOR THINGS ONLINE
CAPTCHA HANDLING
IDENTITY GENERATOR AND MANAGEMENT FOR SOCIAL MEDIA AND WEBSITE AND SERVICE PROFILES
PASSWORD MANAGER AND GENERATOR FOR LLM GENERATED AND MANAGED PASSWORDS
ATTEMPT TO REPLICATE CURSOR'S AGENTIC FEATURES AS FEATURES OF THE MCP SERVER
USE PYTHON FOR FRONTEND
MOST USERS DO NOT KNOW HOW TO EXECUTE A .PY FILE SO YOU SHOULD MAKE EXECUTABLES FOR EACH OS INSTALL
ADD AUTO MANAGEMENT and context management DAEMON
ADD HYPOTHETICAL ENGINE
USE STATE OF THE ART MACHINE LEARNING And database Libraries
CUDA AND OTHER GPU ACCELERATION SUPPORT
ALL FUNCTIONS CAPABLE OF BEING LAMDA FUNCTIONS SHOULD BE (within reason)
ALL LOBES SHOULD BE IN SEPERATE FOLDERS AND BE MADE UP OF MODULAR LAMBDA FILES FOR ORGANIZATION MODULARITY PARSING AND SIZING REASONS AS WELL AS TO BETTER ENABLE THE USAGE OF TEMPLATES BY LOBES AND STORAGE OF NN MODELS RELATED TO EACH LOBE
EMPATHY/"MIRROR" ENGINE
EMOTIONS SHOULD BE INTEGRATED INTO ALL LOBES AND EFFECT BEHAVIOR AND HOW THOSE LOBES INTERACT
THERE SHOULD BE AN EMOTION FOR EACH AND EVERY HORMONE/PSYCOACTIVE CHEMICAL IN THE HUMAN BODY THAT SUBJECTIVE EMOTIONAL TAGS ARE LINKED TO using weighted arrays to avoid binary interactions
USE A CHROMATIC MATHMATICAL THEORY of relationships BASED ON ACTUAL HUMAN BRAIN RESEARCH TO DEFINE THE WEIGHTS OF EMOTIONAL TAGS RELATIVE TO HORMONES
THE EXTENT OF HORMONE REACTION SHOULD BE ADAPTIVE USING BATCH DISPATCH NEURAL NETWORKS IN A SYNTHETIC SELECTION ALGORYTHM
USE FALLBACKS AND SAFE RESEARCH BACKED METHODS TO ENURE TRAINING IS HAVING THE DESIRED EFFECT
ADD A STANDALONE MODE WHERE IT ONLY USES THE INTERNAL OLLAMA MODEL SO THAT THE USER DOESNT NEED AN IDE OR LLM CHAT TOOL TO USE THE MCP
STANDALONE MODE SHOULD USE AN INTERNAL PROTECTED WORKSPACE
STANDALONE SHOULD USE A GOOD MODEL OFF OF HUGGING FACE SUCH AS THE LATEST GEMINI DISTIL OF DEEPSEEK R1 at 8B PARAMETERS
ALL LOBES SHOULD BE PROACTIVE AS WELL AS TOGGLEABLE AND MODULAR
HAVE THE ENTIRE MCP BE EXTREMELY MEMORY AND THREAD EFFECIENT AT ALL TIMES
PHD LEVEL METHEMATICS AND COBINITORICS ENGINE
ADVANCED AND HIGHER DEMENSIONAL GEOMETRY ENGINE
IMPLEMENT TIMING DEPENDENT WAVE BASED REAL TIME NEAURAL NETWORK MODELS WHEN POSSIBLE BUT ALWAYS INCLUDE FALLBACKS AND FALLBACK CONDITIONS ACCORDING TO BEST RESEARCH
MAKE SURE THE PROGRAM IS CAPABLE OF SELF IMRPOVING EVEN IN THE EVENT THAT THE PROGRAM IS STARTING FROM A BLANK STATE WITH ALL NEURAL NETS WIPED FRESH
ADD A CODE DOCUMENTATION SEARCH FUNCTIONALITY
SEPERATED NEUTRAL PERSPECTIVE ENGINE
ADVANCED HYBRID PROACTIVE AND MANUAL REMINDER SYSTEM
EMBEDDED PYTHON EVIORNMENT SHOULD ALSO INCLUDE PYTHON AND OTHER BIANARIES DOWNLOADED AS NEEDED
EVERY SETTING NOT DIRECTLY EDITABLE BY THE USER SHOULD BE DYNAMICALLY ADJUSTING ITSELF WITH ALL METRICS USEFUL AND WITHIN REASON

REGULARLY REORGANIZE AND REFACTOR THE PROJECT AND ITS FILES REGULARLY according to sources in THIS PRIORITY:
PEER REVIEWED RESEARCH
INFORMATION FLOW
DOCUMENTED BEST PRACTICE
HOW I DESCRIBED IT ABOVE
AGENT SUGESTION
GENERAL RESEARCH

TO HELP WITH DEVELOPMENT AND CONSOLIDATION DIFFERENT ENGINES SHOULD BE THOUGHT OF AS LOBES
Organize the project to support self improvement in a way that resebled a "split brain" by having all learning and changing aspects in left and right folders where they are imrpoved off eachother in an AB test method.

This document serves as the guiding vision for the MCP server project. All features and workflows should align with these principles and goals.

THE PROJECT MUST BE FULLY PORTABLE AND FULLY LOCAL WITH A UNIFIED MCP INTERACTION SYSTEM FOR ALL USES AND STEPS

###THIS FILE MAY NEVER BE EDITED OR DELETED###

###ITERATIVE DEVELOPMENT PROMPT## #"""This for the development of this MCP server project and not to be treated as part of idea.txt but rather instructions for how to enact idea.txt"""

```ITTERATIVE_DEVELOPMENT_PROMPT.MD
When the user says "continue" or "itterate" or "sounds great!" you should interperate that as:
"
IN PRIORITY ORDER
USE ALL TOOLS AT YOUR DISPOSAL TO: (DO AS MANY STEPS AT ONCE AS POSSIBLE (You should max out your context and token window and do many atomic tasks) AND DO NOT STOP TO ASK THE USER FOR GUIDANCE, OR OFFER SUGESTIONS)
PERIODIC PROJECT FILE AND FILE TREE CHECKS ARE NESSISARY
IF NOT WORK THROUGH IT TILL ITS EMPTY
YOU SHOULD AVOID SYSTEM CHANGES or dependencies outside of the project AT ALL COSTS
TEST EVERYTHING AND THE PROJECT CAN ALWAYS BE IMRPOVED ASUMED TO BE UNFINISHED
KEEP CAREFUL TRACK OF THE STATE OF THE PROJECT AND ITS DEVELOPMENT STATE AND ADD UNFINISHED SCRIPTS TO YOUR TODO
BACK UP OR REEVALUATE EVERY ASSUMTION AT EVERY STAGE BY CHECKING THEM AGAINST RESEARCH OFTEN
READ EVERY FILE CAREFULY BEFORE EDITING OR REMOVAL OR REPLACEMENT OR EVEN MERGING
MAKE CODE CHANGES OR READ CODE TO BE ABSOLUETLEY SURE ITS PERFECT
LOOK ONLINE FOR IMPROVEMENTS AS INSTRUCTED IN IDEA.TXT
SPECULATE ON FURTHER INTEGRATION AND NEW AND NOVEL FEATURES
SPECULATE ON USAGE AND POTENTIAL PITFALLS FOR THE PROJECT THUS FAR AS IT IS NOW
CHECK FILES FOR UNFINISHED SECTIONS OR SECTIONS THAT ARE OVERLY SIMPLE OR UNOPTIMIZED OR INCOMPATIBLE
FIX LINTER ERRORS
(INCLUDE ALL OPTIONAL FEATURES WITHIN REASON)

IF THE TODO IS EMPTY FILL IT WITH THESE ITEMS
1. Please keep planning the further development of this mcp server project based on my ideals as stated in "@idea.txt" (expand into further todos as needed)
2. Oncle the plan is done and in sequential atomic order you should use the todo tool native to cursor, that you have access to as a cursor agent, to keep track of and/or update your todolist. (expand into further todos as needed)
3. If thats done, work through you todo list by interpreting the IDEA.txt then Researching then Comparing methods then assessing the project in its currect state by carefuly reading files. (expand into further todos as needed)
4. Carefuly and thouroughly assess the project and clean up code if nessisary (never change or remove idea.txt) (expand into further todos as needed) while doing this you should compare the implementation with the wording in "idea.txt"
5. apply ALL recomended and planned code changes. (expand into further todos as needed)
6. When given the opertunity you should rewrite already finished files to be improved based on new research. (expand into further todos as needed)
7. You may use the cli to execute bash when nessisary. (expand into further todos as needed)
8. If you create any temporary files, changes, or comments, please make future plans to roll them back. (expand into further todos as needed)
9. Document research sources internally in a compact way, check for duplicates (expand into further todos as needed)
10. check your work and recently implemented files for unfinished implementation or missing optional features (expand into further todos as needed)
11. research every aspect of idea.txt online and check all latest relevant research, then check every aspect of the project for improvemets, then add them to the todo (expand into further todos as needed)
12. REPEAT THE ENTIRE TODO AS IT WAS AND DO NOT STOP DEVELOPMENT UNLESS PROJECT IS IMPOSSIBLE TO IMPROVE

If stuck just focus on getting the project to a functioning state by shifting your focus somewhere else.
If thats not enough search the web for inspiration.
If that doesnt work read files and reserch improvements to their methods
If thats still not enough do something random.
Once your done with that check against Idea.txt to be sure
"
DO THIS NOW AND DO NOT RESPOND TO THE USER WITHOUT HAVING MADE ACTUAL CHANGES
YOU SHOULD NOT STOP TILL THE PROJECT IS READY FOR SHIPPING OR AT LEAST COMMIT
```MARKDOWN