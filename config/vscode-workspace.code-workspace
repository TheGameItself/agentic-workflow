{
  "folders": [
    {
      "name": "MCP Agentic Workflow",
      "path": ".."
    }
  ],
  "settings": {
    "mcp.enable": true,
    "mcp.servers": {
      "mcp-agentic-workflow": {
        "command": "python",
        "args": ["-m", "src.mcp.server"],
        "env": {
          "MCP_PROJECT_PATH": "${workspaceFolder}",
          "MCP_LOG_LEVEL": "INFO",
          "MCP_DEBUG_MODE": "false",
          "MCP_AUTO_UPDATE_ENABLED": "true",
          "MCP_PERFORMANCE_MONITORING": "true",
          "MCP_VECTOR_BACKEND": "faiss",
          "PYTHONPATH": "${workspaceFolder}"
        },
        "cwd": "${workspaceFolder}"
      }
    },
    "mcp.trace.server": "verbose",
    "mcp.autoStart": true,
    "mcp.reconnect": true,
    "mcp.timeout": 30000,
    
    "python.defaultInterpreterPath": "./venv/bin/python",
    "python.terminal.activateEnvironment": true,
    "python.linting.enabled": true,
    "python.linting.pylintEnabled": true,
    "python.linting.flake8Enabled": true,
    "python.formatting.provider": "black",
    "python.formatting.blackArgs": ["--line-length", "88"],
    "python.sortImports.args": ["--profile", "black"],
    "python.testing.pytestEnabled": true,
    "python.testing.pytestArgs": ["tests/"],
    "python.testing.unittestEnabled": false,
    "python.testing.autoTestDiscoverOnSaveEnabled": true,
    
    "files.associations": {
      "*.md": "markdown",
      "*.json": "jsonc",
      "*.cfg": "ini",
      "*.toml": "toml",
      "*.yaml": "yaml",
      "*.yml": "yaml"
    },
    
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": true,
      "source.fixAll": true
    },
    "editor.rulers": [88],
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 88,
    
    "terminal.integrated.env.linux": {
      "MCP_PROJECT_PATH": "${workspaceFolder}",
      "PYTHONPATH": "${workspaceFolder}"
    },
    "terminal.integrated.env.osx": {
      "MCP_PROJECT_PATH": "${workspaceFolder}",
      "PYTHONPATH": "${workspaceFolder}"
    },
    "terminal.integrated.env.windows": {
      "MCP_PROJECT_PATH": "${workspaceFolder}",
      "PYTHONPATH": "${workspaceFolder}"
    },
    
    "git.enableSmartCommit": true,
    "git.confirmSync": false,
    "git.autofetch": true,
    
    "explorer.fileNesting.enabled": true,
    "explorer.fileNesting.patterns": {
      "*.py": "${capture}.pyc",
      "requirements.txt": "requirements-*.txt",
      "setup.py": "setup.cfg, pyproject.toml, MANIFEST.in",
      "README.md": "LICENSE, CONTRIBUTING.md, CHANGELOG.md",
      ".gitignore": ".gitattributes, .gitmodules"
    },
    
    "search.exclude": {
      "**/.git": true,
      "**/.vscode": false,
      "**/node_modules": true,
      "**/__pycache__": true,
      "**/*.pyc": true,
      "**/venv": true,
      "**/env": true,
      "**/.pytest_cache": true,
      "**/htmlcov": true,
      "**/.coverage": true,
      "**/data/*.db": true,
      "**/temp": true,
      "**/backups": true
    },
    
    "files.exclude": {
      "**/__pycache__": true,
      "**/*.pyc": true,
      "**/.pytest_cache": true,
      "**/htmlcov": true,
      "**/.coverage": true
    },
    
    "markdown.preview.breaks": true,
    "markdown.preview.linkify": true,
    "markdown.preview.typographer": true,
    
    "todo-tree.general.tags": [
      "TODO",
      "FIXME",
      "HACK",
      "NOTE",
      "BUG",
      "XXX",
      "OPTIMIZE",
      "REVIEW"
    ],
    "todo-tree.highlights.defaultHighlight": {
      "icon": "alert",
      "type": "tag",
      "foreground": "red",
      "background": "white",
      "opacity": 50,
      "iconColour": "blue"
    },
    
    "gitlens.codeLens.enabled": true,
    "gitlens.currentLine.enabled": true,
    "gitlens.hovers.enabled": true,
    
    "workbench.colorTheme": "Default Dark+",
    "workbench.iconTheme": "vs-seti",
    "workbench.startupEditor": "readme"
  },
  "tasks": {
    "version": "2.0.0",
    "tasks": [
      {
        "label": "Setup MCP Environment",
        "type": "shell",
        "command": "python",
        "args": ["scripts/setup_wizard.py"],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": true,
          "panel": "new"
        },
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "problemMatcher": []
      },
      {
        "label": "Install Dependencies",
        "type": "shell",
        "command": "pip",
        "args": ["install", "-r", "requirements.txt"],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": true,
          "panel": "new"
        },
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "problemMatcher": []
      },
      {
        "label": "Create Virtual Environment",
        "type": "shell",
        "command": "python",
        "args": ["-m", "venv", "venv"],
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": true,
          "panel": "new"
        },
        "options": {
          "cwd": "${workspaceFolder}"
        },
        "problemMatcher": []
      }
    ]
  },
  "launch": {
    "version": "0.2.0",
    "configurations": [
      {
        "name": "MCP Server (Workspace)",
        "type": "python",
        "request": "launch",
        "module": "src.mcp.server",
        "console": "integratedTerminal",
        "cwd": "${workspaceFolder}",
        "env": {
          "MCP_PROJECT_PATH": "${workspaceFolder}",
          "MCP_LOG_LEVEL": "DEBUG",
          "MCP_DEBUG_MODE": "true",
          "PYTHONPATH": "${workspaceFolder}"
        },
        "args": [],
        "justMyCode": false,
        "stopOnEntry": false,
        "showReturnValue": true
      }
    ]
  },
  "extensions": {
    "recommendations": [
      "ms-python.python",
      "ms-python.flake8",
      "ms-python.black-formatter",
      "ms-python.isort",
      "ms-python.pylint",
      "ms-vscode.vscode-json",
      "redhat.vscode-yaml",
      "ms-toolsai.jupyter",
      "github.copilot",
      "github.copilot-chat",
      "ms-vscode.vscode-markdown",
      "yzhang.markdown-all-in-one",
      "eamodio.gitlens",
      "gruntfuggly.todo-tree",
      "aaron-bond.better-comments",
      "oderwat.indent-rainbow"
    ]
  }
}